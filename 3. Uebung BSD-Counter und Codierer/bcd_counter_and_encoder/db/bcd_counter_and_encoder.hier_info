|bcd_counter_and_encoder
D[0] => reg_nbit:pipo1.d[0]
D[1] => reg_nbit:pipo1.d[1]
D[2] => reg_nbit:pipo1.d[2]
D[3] => reg_nbit:pipo1.d[3]
CLK => reg_nbit:pipo1.clk
CLK => bcd_counter:bcd_counter_instance.CLK
CLK_50 => reg_nbit:pipo2.clk
CLK_50 => reg_nbit:pipo3.clk
CLK_50 => reg_nbit:pipo4.clk
CLK_50 => lcd_controller:lcd_ctrl.clock_50
INIT => bcd_counter:bcd_counter_instance.INIT
INIT => lcd_controller:lcd_ctrl.reset
OUT_7SEG[0] << reg_nbit:pipo2.q[0]
OUT_7SEG[1] << reg_nbit:pipo2.q[1]
OUT_7SEG[2] << reg_nbit:pipo2.q[2]
OUT_7SEG[3] << reg_nbit:pipo2.q[3]
OUT_7SEG[4] << reg_nbit:pipo2.q[4]
OUT_7SEG[5] << reg_nbit:pipo2.q[5]
OUT_7SEG[6] << reg_nbit:pipo2.q[6]
OUT_LED[0] << reg_nbit:pipo3.q[0]
OUT_LED[1] << reg_nbit:pipo3.q[1]
OUT_LED[2] << reg_nbit:pipo3.q[2]
OUT_LED[3] << reg_nbit:pipo3.q[3]
OUT_LED[4] << reg_nbit:pipo3.q[4]
OUT_LED[5] << reg_nbit:pipo3.q[5]
OUT_LED[6] << reg_nbit:pipo3.q[6]
OUT_LED[7] << reg_nbit:pipo3.q[7]
OUT_LCD[0] << reg_nbit:pipo4.q[0]
OUT_LCD[1] << reg_nbit:pipo4.q[1]
OUT_LCD[2] << reg_nbit:pipo4.q[2]
OUT_LCD[3] << reg_nbit:pipo4.q[3]
OUT_LCD[4] << reg_nbit:pipo4.q[4]
OUT_LCD[5] << reg_nbit:pipo4.q[5]
OUT_LCD[6] << reg_nbit:pipo4.q[6]
OUT_LCD[7] << reg_nbit:pipo4.q[7]
OUT_LCD[8] << reg_nbit:pipo4.q[8]
OUT_LCD[9] << reg_nbit:pipo4.q[9]
OUT_LCD[10] << reg_nbit:pipo4.q[10]
OUT_LCD[11] << reg_nbit:pipo4.q[11]
OUT_LCD[12] << reg_nbit:pipo4.q[12]


|bcd_counter_and_encoder|reg_nbit:pipo1
d[0] => q_i[0].DATAIN
d[1] => q_i[1].DATAIN
d[2] => q_i[2].DATAIN
d[3] => q_i[3].DATAIN
ld => q_i[0].ENA
ld => q_i[3].ENA
ld => q_i[2].ENA
ld => q_i[1].ENA
clk => q_i[0].CLK
clk => q_i[1].CLK
clk => q_i[2].CLK
clk => q_i[3].CLK
clk => q_o[0].CLK
clk => q_o[1].CLK
clk => q_o[2].CLK
clk => q_o[3].CLK
clr => q_o[0].ACLR
clr => q_o[1].ACLR
clr => q_o[2].ACLR
clr => q_o[3].ACLR
clr => q_i[0].ACLR
clr => q_i[1].ACLR
clr => q_i[2].ACLR
clr => q_i[3].ACLR
q[0] <= q_o[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q_o[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q_o[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q_o[3].DB_MAX_OUTPUT_PORT_TYPE


|bcd_counter_and_encoder|bcd_counter:bcd_counter_instance
CLK => temp[0].CLK
CLK => temp[1].CLK
CLK => temp[2].CLK
CLK => temp[3].CLK
INIT => temp[0].ALOAD
INIT => temp[1].ALOAD
INIT => temp[2].ALOAD
INIT => temp[3].ALOAD
D[0] => temp[0].ADATA
D[1] => temp[1].ADATA
D[2] => temp[2].ADATA
D[3] => temp[3].ADATA
AUSGANG[0] <= temp[0].DB_MAX_OUTPUT_PORT_TYPE
AUSGANG[1] <= temp[1].DB_MAX_OUTPUT_PORT_TYPE
AUSGANG[2] <= temp[2].DB_MAX_OUTPUT_PORT_TYPE
AUSGANG[3] <= temp[3].DB_MAX_OUTPUT_PORT_TYPE


|bcd_counter_and_encoder|bcd_to_7seg:bcd_to_7seg_instance
D[0] => Mux0.IN19
D[0] => Mux1.IN19
D[0] => Mux2.IN19
D[0] => Mux3.IN19
D[0] => Mux4.IN19
D[0] => Mux5.IN19
D[0] => Mux6.IN19
D[1] => Mux0.IN18
D[1] => Mux1.IN18
D[1] => Mux2.IN18
D[1] => Mux3.IN18
D[1] => Mux4.IN18
D[1] => Mux5.IN18
D[1] => Mux6.IN18
D[2] => Mux0.IN17
D[2] => Mux1.IN17
D[2] => Mux2.IN17
D[2] => Mux3.IN17
D[2] => Mux4.IN17
D[2] => Mux5.IN17
D[2] => Mux6.IN17
D[3] => Mux0.IN16
D[3] => Mux1.IN16
D[3] => Mux2.IN16
D[3] => Mux3.IN16
D[3] => Mux4.IN16
D[3] => Mux5.IN16
D[3] => Mux6.IN16
O[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
O[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
O[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
O[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
O[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
O[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
O[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|bcd_counter_and_encoder|reg_nbit:pipo2
d[0] => q_i[0].DATAIN
d[1] => q_i[1].DATAIN
d[2] => q_i[2].DATAIN
d[3] => q_i[3].DATAIN
d[4] => q_i[4].DATAIN
d[5] => q_i[5].DATAIN
d[6] => q_i[6].DATAIN
ld => q_i[0].ENA
ld => q_i[6].ENA
ld => q_i[5].ENA
ld => q_i[4].ENA
ld => q_i[3].ENA
ld => q_i[2].ENA
ld => q_i[1].ENA
clk => q_i[0].CLK
clk => q_i[1].CLK
clk => q_i[2].CLK
clk => q_i[3].CLK
clk => q_i[4].CLK
clk => q_i[5].CLK
clk => q_i[6].CLK
clk => q_o[0].CLK
clk => q_o[1].CLK
clk => q_o[2].CLK
clk => q_o[3].CLK
clk => q_o[4].CLK
clk => q_o[5].CLK
clk => q_o[6].CLK
clr => q_o[0].ACLR
clr => q_o[1].ACLR
clr => q_o[2].ACLR
clr => q_o[3].ACLR
clr => q_o[4].ACLR
clr => q_o[5].ACLR
clr => q_o[6].ACLR
clr => q_i[0].ACLR
clr => q_i[1].ACLR
clr => q_i[2].ACLR
clr => q_i[3].ACLR
clr => q_i[4].ACLR
clr => q_i[5].ACLR
clr => q_i[6].ACLR
q[0] <= q_o[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q_o[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q_o[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q_o[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q_o[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q_o[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q_o[6].DB_MAX_OUTPUT_PORT_TYPE


|bcd_counter_and_encoder|bcd_to_aiken_and_gray:converter
D[0] => gray.IN0
D[0] => aiken.IN0
D[0] => aiken.IN0
D[0] => aiken.IN0
D[0] => aiken.IN0
D[0] => aiken.IN0
D[1] => gray.IN1
D[1] => gray.IN0
D[1] => aiken.IN0
D[1] => aiken.IN0
D[1] => aiken.IN1
D[2] => gray.IN1
D[2] => gray.IN0
D[2] => aiken.IN1
D[2] => aiken.IN1
D[2] => aiken.IN1
D[2] => aiken.IN1
D[2] => aiken.IN1
D[2] => aiken.IN1
D[3] => gray.IN1
D[3] => aiken.IN1
D[3] => aiken.IN1
D[3] => aiken.IN1
D[3] => O[7].DATAIN
D[3] => aiken.IN1
D[3] => aiken.IN1
D[3] => aiken.IN1
D[3] => aiken.IN1
O[0] <= aiken.DB_MAX_OUTPUT_PORT_TYPE
O[1] <= aiken.DB_MAX_OUTPUT_PORT_TYPE
O[2] <= aiken.DB_MAX_OUTPUT_PORT_TYPE
O[3] <= aiken.DB_MAX_OUTPUT_PORT_TYPE
O[4] <= gray.DB_MAX_OUTPUT_PORT_TYPE
O[5] <= gray.DB_MAX_OUTPUT_PORT_TYPE
O[6] <= gray.DB_MAX_OUTPUT_PORT_TYPE
O[7] <= D[3].DB_MAX_OUTPUT_PORT_TYPE


|bcd_counter_and_encoder|reg_nbit:pipo3
d[0] => q_i[0].DATAIN
d[1] => q_i[1].DATAIN
d[2] => q_i[2].DATAIN
d[3] => q_i[3].DATAIN
d[4] => q_i[4].DATAIN
d[5] => q_i[5].DATAIN
d[6] => q_i[6].DATAIN
d[7] => q_i[7].DATAIN
ld => q_i[0].ENA
ld => q_i[7].ENA
ld => q_i[6].ENA
ld => q_i[5].ENA
ld => q_i[4].ENA
ld => q_i[3].ENA
ld => q_i[2].ENA
ld => q_i[1].ENA
clk => q_i[0].CLK
clk => q_i[1].CLK
clk => q_i[2].CLK
clk => q_i[3].CLK
clk => q_i[4].CLK
clk => q_i[5].CLK
clk => q_i[6].CLK
clk => q_i[7].CLK
clk => q_o[0].CLK
clk => q_o[1].CLK
clk => q_o[2].CLK
clk => q_o[3].CLK
clk => q_o[4].CLK
clk => q_o[5].CLK
clk => q_o[6].CLK
clk => q_o[7].CLK
clr => q_o[0].ACLR
clr => q_o[1].ACLR
clr => q_o[2].ACLR
clr => q_o[3].ACLR
clr => q_o[4].ACLR
clr => q_o[5].ACLR
clr => q_o[6].ACLR
clr => q_o[7].ACLR
clr => q_i[0].ACLR
clr => q_i[1].ACLR
clr => q_i[2].ACLR
clr => q_i[3].ACLR
clr => q_i[4].ACLR
clr => q_i[5].ACLR
clr => q_i[6].ACLR
clr => q_i[7].ACLR
q[0] <= q_o[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q_o[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q_o[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q_o[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q_o[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q_o[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q_o[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q_o[7].DB_MAX_OUTPUT_PORT_TYPE


|bcd_counter_and_encoder|reg_nbit:pipo4
d[0] => q_i[0].DATAIN
d[1] => q_i[1].DATAIN
d[2] => q_i[2].DATAIN
d[3] => q_i[3].DATAIN
d[4] => q_i[4].DATAIN
d[5] => q_i[5].DATAIN
d[6] => q_i[6].DATAIN
d[7] => q_i[7].DATAIN
d[8] => q_i[8].DATAIN
d[9] => q_i[9].DATAIN
d[10] => q_i[10].DATAIN
d[11] => q_i[11].DATAIN
d[12] => q_i[12].DATAIN
ld => q_i[0].ENA
ld => q_i[12].ENA
ld => q_i[11].ENA
ld => q_i[10].ENA
ld => q_i[9].ENA
ld => q_i[8].ENA
ld => q_i[7].ENA
ld => q_i[6].ENA
ld => q_i[5].ENA
ld => q_i[4].ENA
ld => q_i[3].ENA
ld => q_i[2].ENA
ld => q_i[1].ENA
clk => q_i[0].CLK
clk => q_i[1].CLK
clk => q_i[2].CLK
clk => q_i[3].CLK
clk => q_i[4].CLK
clk => q_i[5].CLK
clk => q_i[6].CLK
clk => q_i[7].CLK
clk => q_i[8].CLK
clk => q_i[9].CLK
clk => q_i[10].CLK
clk => q_i[11].CLK
clk => q_i[12].CLK
clk => q_o[0].CLK
clk => q_o[1].CLK
clk => q_o[2].CLK
clk => q_o[3].CLK
clk => q_o[4].CLK
clk => q_o[5].CLK
clk => q_o[6].CLK
clk => q_o[7].CLK
clk => q_o[8].CLK
clk => q_o[9].CLK
clk => q_o[10].CLK
clk => q_o[11].CLK
clk => q_o[12].CLK
clr => q_o[0].ACLR
clr => q_o[1].ACLR
clr => q_o[2].ACLR
clr => q_o[3].ACLR
clr => q_o[4].ACLR
clr => q_o[5].ACLR
clr => q_o[6].ACLR
clr => q_o[7].ACLR
clr => q_o[8].ACLR
clr => q_o[9].ACLR
clr => q_o[10].ACLR
clr => q_o[11].ACLR
clr => q_o[12].ACLR
clr => q_i[0].ACLR
clr => q_i[1].ACLR
clr => q_i[2].ACLR
clr => q_i[3].ACLR
clr => q_i[4].ACLR
clr => q_i[5].ACLR
clr => q_i[6].ACLR
clr => q_i[7].ACLR
clr => q_i[8].ACLR
clr => q_i[9].ACLR
clr => q_i[10].ACLR
clr => q_i[11].ACLR
clr => q_i[12].ACLR
q[0] <= q_o[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q_o[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q_o[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q_o[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q_o[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q_o[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q_o[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q_o[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= q_o[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= q_o[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= q_o[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= q_o[11].DB_MAX_OUTPUT_PORT_TYPE
q[12] <= q_o[12].DB_MAX_OUTPUT_PORT_TYPE


|bcd_counter_and_encoder|lcd_controller:lcd_ctrl
reset => lcd_rw_int.ACLR
reset => lcd_rs~reg0.ACLR
reset => lcd_e~reg0.PRESET
reset => data_bus_value[0].ACLR
reset => data_bus_value[1].ACLR
reset => data_bus_value[2].ACLR
reset => data_bus_value[3].PRESET
reset => data_bus_value[4].PRESET
reset => data_bus_value[5].PRESET
reset => data_bus_value[6].ACLR
reset => data_bus_value[7].ACLR
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_400hz_enable.OUTPUTSELECT
reset => next_command~3.DATAIN
reset => state~14.DATAIN
reset => lcd_on~reg0.ENA
reset => char_count[4].ENA
reset => char_count[3].ENA
reset => char_count[2].ENA
reset => char_count[1].ENA
reset => char_count[0].ENA
reset => lcd_blon~reg0.ENA
clock_50 => lcd_on~reg0.CLK
clock_50 => lcd_blon~reg0.CLK
clock_50 => char_count[0].CLK
clock_50 => char_count[1].CLK
clock_50 => char_count[2].CLK
clock_50 => char_count[3].CLK
clock_50 => char_count[4].CLK
clock_50 => lcd_rw_int.CLK
clock_50 => lcd_rs~reg0.CLK
clock_50 => lcd_e~reg0.CLK
clock_50 => data_bus_value[0].CLK
clock_50 => data_bus_value[1].CLK
clock_50 => data_bus_value[2].CLK
clock_50 => data_bus_value[3].CLK
clock_50 => data_bus_value[4].CLK
clock_50 => data_bus_value[5].CLK
clock_50 => data_bus_value[6].CLK
clock_50 => data_bus_value[7].CLK
clock_50 => clk_400hz_enable.CLK
clock_50 => clk_count_400hz[0].CLK
clock_50 => clk_count_400hz[1].CLK
clock_50 => clk_count_400hz[2].CLK
clock_50 => clk_count_400hz[3].CLK
clock_50 => clk_count_400hz[4].CLK
clock_50 => clk_count_400hz[5].CLK
clock_50 => clk_count_400hz[6].CLK
clock_50 => clk_count_400hz[7].CLK
clock_50 => clk_count_400hz[8].CLK
clock_50 => clk_count_400hz[9].CLK
clock_50 => clk_count_400hz[10].CLK
clock_50 => clk_count_400hz[11].CLK
clock_50 => clk_count_400hz[12].CLK
clock_50 => clk_count_400hz[13].CLK
clock_50 => clk_count_400hz[14].CLK
clock_50 => clk_count_400hz[15].CLK
clock_50 => clk_count_400hz[16].CLK
clock_50 => clk_count_400hz[17].CLK
clock_50 => clk_count_400hz[18].CLK
clock_50 => clk_count_400hz[19].CLK
clock_50 => next_command~1.DATAIN
clock_50 => state~12.DATAIN
BCD_ZAHL[0] => Mux42.IN19
BCD_ZAHL[1] => Mux29.IN10
BCD_ZAHL[1] => Mux30.IN10
BCD_ZAHL[1] => Mux31.IN10
BCD_ZAHL[1] => Mux32.IN10
BCD_ZAHL[1] => Mux33.IN10
BCD_ZAHL[1] => Mux34.IN10
BCD_ZAHL[1] => Mux35.IN10
BCD_ZAHL[1] => Mux37.IN10
BCD_ZAHL[1] => Mux38.IN10
BCD_ZAHL[1] => Mux39.IN10
BCD_ZAHL[1] => Mux40.IN5
BCD_ZAHL[1] => Mux41.IN10
BCD_ZAHL[1] => Mux42.IN18
BCD_ZAHL[2] => Mux29.IN9
BCD_ZAHL[2] => Mux30.IN9
BCD_ZAHL[2] => Mux31.IN9
BCD_ZAHL[2] => Mux32.IN9
BCD_ZAHL[2] => Mux33.IN9
BCD_ZAHL[2] => Mux34.IN9
BCD_ZAHL[2] => Mux35.IN9
BCD_ZAHL[2] => Mux36.IN5
BCD_ZAHL[2] => Mux37.IN9
BCD_ZAHL[2] => Mux38.IN9
BCD_ZAHL[2] => Mux39.IN9
BCD_ZAHL[2] => Mux41.IN9
BCD_ZAHL[2] => Mux42.IN17
BCD_ZAHL[3] => Mux29.IN8
BCD_ZAHL[3] => Mux30.IN8
BCD_ZAHL[3] => Mux31.IN8
BCD_ZAHL[3] => Mux32.IN8
BCD_ZAHL[3] => Mux33.IN8
BCD_ZAHL[3] => Mux34.IN8
BCD_ZAHL[3] => Mux35.IN8
BCD_ZAHL[3] => Mux36.IN4
BCD_ZAHL[3] => Mux37.IN8
BCD_ZAHL[3] => Mux38.IN8
BCD_ZAHL[3] => Mux39.IN8
BCD_ZAHL[3] => Mux40.IN4
BCD_ZAHL[3] => Mux41.IN8
BCD_ZAHL[3] => Mux42.IN16
BCD_ZAHL[3] => Mux49.IN30
AIKEN_ZAHL[0] => Mux0.IN19
AIKEN_ZAHL[0] => Mux1.IN19
AIKEN_ZAHL[0] => Mux2.IN19
AIKEN_ZAHL[0] => Mux3.IN19
AIKEN_ZAHL[0] => Mux4.IN19
AIKEN_ZAHL[0] => Mux5.IN19
AIKEN_ZAHL[0] => Mux6.IN19
AIKEN_ZAHL[0] => Mux7.IN19
AIKEN_ZAHL[0] => Mux8.IN19
AIKEN_ZAHL[0] => Mux9.IN19
AIKEN_ZAHL[0] => Mux10.IN19
AIKEN_ZAHL[0] => Mux11.IN19
AIKEN_ZAHL[0] => Mux12.IN19
AIKEN_ZAHL[0] => Mux13.IN19
AIKEN_ZAHL[0] => Mux14.IN19
AIKEN_ZAHL[1] => Mux0.IN18
AIKEN_ZAHL[1] => Mux1.IN18
AIKEN_ZAHL[1] => Mux2.IN18
AIKEN_ZAHL[1] => Mux3.IN18
AIKEN_ZAHL[1] => Mux4.IN18
AIKEN_ZAHL[1] => Mux5.IN18
AIKEN_ZAHL[1] => Mux6.IN18
AIKEN_ZAHL[1] => Mux7.IN18
AIKEN_ZAHL[1] => Mux8.IN18
AIKEN_ZAHL[1] => Mux9.IN18
AIKEN_ZAHL[1] => Mux10.IN18
AIKEN_ZAHL[1] => Mux11.IN18
AIKEN_ZAHL[1] => Mux12.IN18
AIKEN_ZAHL[1] => Mux13.IN18
AIKEN_ZAHL[1] => Mux14.IN18
AIKEN_ZAHL[2] => Mux0.IN17
AIKEN_ZAHL[2] => Mux1.IN17
AIKEN_ZAHL[2] => Mux2.IN17
AIKEN_ZAHL[2] => Mux3.IN17
AIKEN_ZAHL[2] => Mux4.IN17
AIKEN_ZAHL[2] => Mux5.IN17
AIKEN_ZAHL[2] => Mux6.IN17
AIKEN_ZAHL[2] => Mux7.IN17
AIKEN_ZAHL[2] => Mux8.IN17
AIKEN_ZAHL[2] => Mux9.IN17
AIKEN_ZAHL[2] => Mux10.IN17
AIKEN_ZAHL[2] => Mux11.IN17
AIKEN_ZAHL[2] => Mux12.IN17
AIKEN_ZAHL[2] => Mux13.IN17
AIKEN_ZAHL[2] => Mux14.IN17
AIKEN_ZAHL[3] => Mux0.IN16
AIKEN_ZAHL[3] => Mux1.IN16
AIKEN_ZAHL[3] => Mux2.IN16
AIKEN_ZAHL[3] => Mux3.IN16
AIKEN_ZAHL[3] => Mux4.IN16
AIKEN_ZAHL[3] => Mux5.IN16
AIKEN_ZAHL[3] => Mux6.IN16
AIKEN_ZAHL[3] => Mux7.IN16
AIKEN_ZAHL[3] => Mux8.IN16
AIKEN_ZAHL[3] => Mux9.IN16
AIKEN_ZAHL[3] => Mux10.IN16
AIKEN_ZAHL[3] => Mux11.IN16
AIKEN_ZAHL[3] => Mux12.IN16
AIKEN_ZAHL[3] => Mux13.IN16
AIKEN_ZAHL[3] => Mux14.IN16
GRAY_ZAHL[0] => Mux28.IN19
GRAY_ZAHL[1] => Mux15.IN10
GRAY_ZAHL[1] => Mux16.IN10
GRAY_ZAHL[1] => Mux17.IN10
GRAY_ZAHL[1] => Mux18.IN10
GRAY_ZAHL[1] => Mux19.IN10
GRAY_ZAHL[1] => Mux20.IN10
GRAY_ZAHL[1] => Mux21.IN10
GRAY_ZAHL[1] => Mux22.IN10
GRAY_ZAHL[1] => Mux23.IN10
GRAY_ZAHL[1] => Mux24.IN10
GRAY_ZAHL[1] => Mux25.IN10
GRAY_ZAHL[1] => Mux26.IN5
GRAY_ZAHL[1] => Mux27.IN10
GRAY_ZAHL[1] => Mux28.IN18
GRAY_ZAHL[2] => Mux15.IN9
GRAY_ZAHL[2] => Mux16.IN9
GRAY_ZAHL[2] => Mux17.IN9
GRAY_ZAHL[2] => Mux18.IN9
GRAY_ZAHL[2] => Mux19.IN9
GRAY_ZAHL[2] => Mux20.IN9
GRAY_ZAHL[2] => Mux21.IN9
GRAY_ZAHL[2] => Mux22.IN9
GRAY_ZAHL[2] => Mux23.IN9
GRAY_ZAHL[2] => Mux24.IN9
GRAY_ZAHL[2] => Mux25.IN9
GRAY_ZAHL[2] => Mux27.IN9
GRAY_ZAHL[2] => Mux28.IN17
GRAY_ZAHL[3] => Mux15.IN8
GRAY_ZAHL[3] => Mux16.IN8
GRAY_ZAHL[3] => Mux17.IN8
GRAY_ZAHL[3] => Mux18.IN8
GRAY_ZAHL[3] => Mux19.IN8
GRAY_ZAHL[3] => Mux20.IN8
GRAY_ZAHL[3] => Mux21.IN8
GRAY_ZAHL[3] => Mux22.IN8
GRAY_ZAHL[3] => Mux23.IN8
GRAY_ZAHL[3] => Mux24.IN8
GRAY_ZAHL[3] => Mux25.IN8
GRAY_ZAHL[3] => Mux26.IN4
GRAY_ZAHL[3] => Mux27.IN8
GRAY_ZAHL[3] => Mux28.IN16
GRAY_ZAHL[3] => Mux49.IN31
lcd_rs <= lcd_rs~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_e <= lcd_e~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_rw <= lcd_rw_int.DB_MAX_OUTPUT_PORT_TYPE
lcd_on <= lcd_on~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_blon <= lcd_blon~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_bus_0 <> data_bus_0
data_bus_1 <> data_bus_1
data_bus_2 <> data_bus_2
data_bus_3 <> data_bus_3
data_bus_4 <> data_bus_4
data_bus_5 <> data_bus_5
data_bus_6 <> data_bus_6
data_bus_7 <> data_bus_7


